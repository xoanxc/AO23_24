<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>