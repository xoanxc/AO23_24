<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        teMAAAAASUVORK5CYII=
</value>
  </data>
</root>