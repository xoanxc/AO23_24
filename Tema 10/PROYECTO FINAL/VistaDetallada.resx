<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>