<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABJBwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAAcDSURBVHja7d1faJV1HMfxD1sInjUVZrq6yF2k0o1IbTf9mVQE6Wxd9OcuIrqIkAph
        DJagJLK8SVDzLruUtCHMGe4m/4Drz8W6mJqYTGsb2GhpSk5R5+l3GEPRbZ2dPc/J5/d5/7434mCw3+u9
        c55zzvM8k1iTrRq9pE/VoT4N65ryGZsxjeiUDmuPWlWveXDOjP6FQH9Uf4ZtzGd+bmhIB9WiJ4EtZj2q
        dTquSxHA3ztn9ImWADzdWqz39aNuRog/8bTws95TDujJVk5vqyc8XOYjn6vapkfgvnct1Zdha/IWMxYO
        bJdBfvd6Vj+Y4E/MURK4s17RaTP+wnyjhdAX1mr1G/LndUufay78rvzjh4Pvwu/LX5hePQ6/84ypDX7v
        OeP6BjH8E9MCv/cc9PukEP67Z0j18DvPDbXC7z17fPjXwD/JHIbfe07B7z0j8Lu/Hwi/+cBPAPATAPwE
        AD8BwE8A8BMA/AQAPwHATwDwEwD8BAA/AcBPAPATAPwEAD8BwE8A8BMA/AQA/2zmkgZ1QkfUEeZI+Nfg
        /3Z3QvjLfBbuBR1SmxpVp0VaoFyYBeFfdVoV/rc7fHWMAOLl/yUgr1T1lD9XdfjqhjLftgr+Ms3vai/y
        9mzLtVUDBBAT/5g6Va+Kon/GCjXoQJmeDOBPfUa1PTzLz3Qt1s6y3Kge/pTnL60v8RbNObXoIgFk/bd/
        vSpL/okrQwLXCCDLz/3bZ3mD9px2pHwsAH+K01nCc//9xwKdBJDVF37J3IKpPnwn6wCy+rZP+wxe+E3/
        orDdOYDsvuuX3F35l4XvZhpAdt/zT/ZOvG2pHQrCn8pc0MpEd2Jl+I52AWT5A99D03zkU8qqDt/RLIBs
        f96f/K3Y27wCyPrpHo2J70hjSqeMwJ/CDKTwVzrrNOgSQPbP9etL4B3Ae9cinfAIIIZTPb/T/MT3ZYGO
        OAQQx5m++1L4o2w5dcQfQCwnehOANT9PAeb8HASa8/My0Jw/nTeCVsX7RlCM1/jxVrA1f17diX8Y1B1n
        ALFe4cvHwdb8hRNCNiS6UxtiPCEk7uv7T2t5Yju1PMULRuFPbbYmdlLo1vhOCnW4u8eAGhLZq4ZUrxWG
        P8U5oMWz3qtadcV2YYjPvX3GtHOWl4ZV6QvdjiuAJqtbO11TyywuDn1IrbFdHNqkc0b8hbkYEsiV+Nvf
        WoZbR8FfhkeBHSUcC9SGB//IbhDhyT9+LDDzW8R0pfzcX/YAfPnHx/wmUe7842N7mzj47zwZGN4oEv7J
        ThmxuVUs/A/2wE8A8BMA/AQAPwHATwDwEwD8BAA/AcBPAPATAPwEAD8BwE8A8BMA/AQAPwHATwDwEwD8
        BAC/dQDwWwcAv3UA8FsHAH9Mcx1+7xmG33v64PeeDvid57Y2w+88I3oZfuc5poXwO89m+J3nb70Iv/P0
        qAZ+37mpD+F3np/0GPy+c0MfwO8836t2Ov618Ec9V/UO/M7zlargdz78Wwa/7/yq5zn0853fwq/4lOs5
        nWWLIudvnpp/qXrYIl/+Gu1li3z5K7RRt9gkV35phc6zSb78ldrGJvnyS/UaYpt8+aUtbJMzf42OsVG+
        /FKjhtkqX35pEy8Ao5zzxfFL+9msKPlfLfaaH94AtuYXHwB580uX2TJnfmmUTXPmlwbZNmd+qZeNc+aX
        utk6Z35pF5vnzC+9pStsoC+/VKeTbKEvvzRHu9lEX/7CekNX2Uhffmm+vmUrffkL6zUOBJ35pYe1jw31
        5S+sp3WKTfXlH38a4NQwY/7C1UEf88mgL39hzVW7rrPBrvyFVaXPSMCXnwTs+UnAnp8E7PlJ4MHkX6uy
        LhKw5icBe34SsOcnAXt+ErDnJwF7fhKw5ycBe34SsOcnAXt+ErDnJ4FyzLkHmZ8E7PlJwJ6fBOz5ScCe
        nwTs+UnAnp8E7PlJwJ6fBOz5ScCenwTs+UnAnp8E7PlJwJ6fBOz5SaA4/iZFvUjAmp8E7PlJwJ6fBOz5
        ScCenwTs+UnAnp8E7PlJwJ7fOwH4rROA3zoB+K0TgN86AfitE4DfOgH4rROA3zoB+K0TgN86AfitE4Df
        OoF++J0T6NcaKH0TgN86AfitE4DfOgH4rROA3zoB+K0TgN86AfitE4DfOgH4rROA3zoB+K0TgN86Afit
        E4DfOgH4rROA3zoB+K0TgN86AfitE4DfOgH4rROA3zoB+K0TgN86AfitE4DfOgH4rRPo12q21TcB+K0T
        gN86AfitE4A/8wm0a7Rk/jPwZ3/N1Uf6oyT+43qG7YthVahZJ2eIf0tf6wm2Lp71lPbqctH857VRNWxa
        bEcDzerSP/+JP6RtWhEeNVgRrnl6XbvD08GVSR/0h3VMW1SvSjYq5jVHS/SmdqlbvRoMrxAu66x6tF+b
        1MjD/v3rXzT168TGR4PSAAAAAElFTkSuQmCC
</value>
  </data>
</root>