<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>