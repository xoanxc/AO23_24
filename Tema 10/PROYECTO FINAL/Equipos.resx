<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>